name: Publish to NPM

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: false
        default: 'current'

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.N8N_TOKEN }}  # ← Added explicit token

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Verify build output
        run: |
          echo "Checking dist directory..."
          ls -la dist/
          echo "Checking late node files..."
          ls -la dist/late/
          echo "Checking credentials files..."
          ls -la dist/credentials/

      - name: Get current version info
        id: version_info
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            RELEASE_TAG=${GITHUB_REF#refs/tags/}
            echo "Release tag: $RELEASE_TAG"
            # Remove 'v' prefix if present
            RELEASE_VERSION=${RELEASE_TAG#v}
            echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
          fi
          
          # Get current version from package.json
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          
          echo "Package.json version: $PACKAGE_VERSION"
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "Release version: $RELEASE_VERSION"
          fi

      - name: Verify version consistency
        if: github.event_name == 'release'
        run: |
          PACKAGE_VERSION="${{ steps.version_info.outputs.package_version }}"
          RELEASE_VERSION="${{ steps.version_info.outputs.release_version }}"
          
          echo "Verifying version consistency..."
          echo "Package.json version: $PACKAGE_VERSION"
          echo "Release tag version: $RELEASE_VERSION"
          
          if [ "$PACKAGE_VERSION" != "$RELEASE_VERSION" ]; then
            echo "❌ ERROR: Version mismatch!"
            echo "Package.json has version $PACKAGE_VERSION but release tag is $RELEASE_VERSION"
            echo "This indicates the auto-release workflow didn't update package.json correctly."
            exit 1
          else
            echo "✅ Version consistency verified: $PACKAGE_VERSION"
          fi

      - name: Verify package.json
        run: |
          echo "Final package.json version check:"
          node -p "require('./package.json').version"
          echo "Package.json name and version:"
          node -p "`const pkg = require('./package.json'); pkg.name + '@' + pkg.version`"

      - name: Run pre-publish checks
        run: |
          echo "Running prepack script..."
          npm run prepack
          echo "Checking final dist structure..."
          find dist -type f -name "*.js" | head -10
          
          echo "Verifying package contents before publish..."
          npm pack --dry-run

      - name: Publish to NPM
        run: |
          echo "Publishing to NPM..."
          npm publish --access public
          
          # Verify publication
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "✅ Successfully published n8n-nodes-late@$PACKAGE_VERSION to NPM"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify NPM publication
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Waiting a few seconds for NPM to update..."
          sleep 10
          
          echo "Verifying publication on NPM registry..."
          NPM_VERSION=$(npm view n8n-nodes-late@$PACKAGE_VERSION version 2>/dev/null || echo "not-found")
          
          if [ "$NPM_VERSION" = "$PACKAGE_VERSION" ]; then
            echo "✅ Publication verified: n8n-nodes-late@$PACKAGE_VERSION is available on NPM"
          else
            echo "⚠️  Could not immediately verify publication (NPM may be slow to update)"
            echo "Expected: $PACKAGE_VERSION, Found: $NPM_VERSION"
          fi

      - name: Update GitHub release
        if: github.event_name == 'release'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.N8N_TOKEN }}  # ← Added explicit token
          script: |
            const packageVersion = '${{ steps.version_info.outputs.package_version }}';
            const releaseId = context.payload.release.id;
            
            // Add a comment to the release
            const releaseUrl = context.payload.release.html_url;
            const body = `🚀 **Successfully published to NPM!**
            
            📦 **Package:** \`n8n-nodes-late@${packageVersion}\`
            🔗 **NPM:** https://www.npmjs.com/package/n8n-nodes-late
            
            ### Installation
            \`\`\`bash
            npm install n8n-nodes-late@${packageVersion}
            \`\`\`
            
            Or install via n8n Community Nodes panel using: \`n8n-nodes-late\`
            `;
            
            // Update the release body to include publication info
            const currentRelease = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId
            });
            
            const updatedBody = currentRelease.data.body + '\n\n---\n\n' + body;
            
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId,
              body: updatedBody
            });
            
            console.log('✅ Updated GitHub release with NPM publication info');

  notify-success:
    runs-on: ubuntu-latest
    needs: publish
    if: success()

    steps:
      - name: Success notification
        run: |
          echo "✅ Package successfully published to NPM!"
          echo "📦 Package: n8n-nodes-late"
          echo "🏷️  Version: ${GITHUB_REF#refs/tags/}"
          echo "🔗 NPM: https://www.npmjs.com/package/n8n-nodes-late"
          echo "🔗 GitHub Release: ${{ github.event.release.html_url }}"

  notify-failure:
    runs-on: ubuntu-latest
    needs: publish
    if: failure()

    steps:
      - name: Failure notification
        run: |
          echo "❌ Failed to publish package to NPM"
          echo "📋 Check the logs above for details"
          echo "🔍 Common issues:"
          echo "  - NPM token expired or invalid"
          echo "  - Version already exists on NPM"
          echo "  - Build or test failures"
          echo "  - Version mismatch between package.json and release tag"
          exit 1